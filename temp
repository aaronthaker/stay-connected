def calculate_arbitrage():
    print("=== Arbitrage Betting Calculator ===")
    
    # Get user input
    sell_price_exchange = float(input("Enter the sell (lay) price on the exchange (e.g., 2.25): "))
    liquidity = float(input("Enter the available liquidity at that price on the exchange: "))
    back_price_bookmaker = float(input("Enter the back price available on the bookmaker (e.g., 2.30): "))
    commission_rate = 0.02  # Smarkets standard commission rate on net winnings

    # Calculate the amount to lay on the exchange (based on available liquidity)
    lay_stake = liquidity  # You will lay this amount on the exchange
    liability = (sell_price_exchange - 1) * lay_stake  # Liability of the lay bet

    # Calculate the amount to back on the bookmaker to cover the liability
    back_stake = liability / (back_price_bookmaker - 1)

    # Calculate potential profits for each outcome
    if back_stake > lay_stake:
        print("\n‚ö†Ô∏è Insufficient liquidity on the exchange to cover the required back stake.")
        print("   Consider reducing your lay stake or finding additional liquidity.")
        return

    # Scenario 1: The selection wins
    profit_bookmaker_win = (back_stake * (back_price_bookmaker - 1)) - liability
    net_profit_win = profit_bookmaker_win - (profit_bookmaker_win * commission_rate)

    # Scenario 2: The selection loses
    profit_exchange_win = lay_stake - (back_stake * (back_price_bookmaker - 1))
    net_profit_lose = profit_exchange_win - (profit_exchange_win * commission_rate)

    # Output the instructions
    print("\n=== Bet Placement Instructions ===")
    print(f"1Ô∏è‚É£ Place a LAY bet on the exchange for ¬£{lay_stake:.2f} at odds of {sell_price_exchange}.")
    print(f"   - This will create a liability of ¬£{liability:.2f}.")
    print(f"2Ô∏è‚É£ Place a BACK bet on the bookmaker for ¬£{back_stake:.2f} at odds of {back_price_bookmaker}.")

    # Display potential profits
    print("\n=== Potential Profit Analysis ===")
    print(f"üìà If the selection WINS:")
    print(f"   - Profit from bookmaker: ¬£{profit_bookmaker_win:.2f}")
    print(f"   - Net profit after commission: ¬£{net_profit_win:.2f}")
    print(f"üìâ If the selection LOSES:")
    print(f"   - Profit from exchange: ¬£{profit_exchange_win:.2f}")
    print(f"   - Net profit after commission: ¬£{net_profit_lose:.2f}")

    # Determine if the arbitrage is profitable
    if net_profit_win > 0 and net_profit_lose > 0:
        print("\n‚úÖ This arbitrage opportunity is profitable.")
    else:
        print("\n‚ùå This arbitrage opportunity is not profitable. Re-evaluate your stakes or odds.")

# Run the calculator
calculate_arbitrage()