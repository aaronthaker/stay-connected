import pandas as pd
from rapidfuzz import process, fuzz

# Load the Excel file
file_path = 'your_excel_file.xlsx'  # Replace with your file
current_df = pd.read_excel(file_path, sheet_name='CurrentGen')
next_df = pd.read_excel(file_path, sheet_name='NextGen')

# Choose the column that contains the alerting communication
current_justifications = current_df['Justification']
next_justifications = next_df['Justification']

# Optional: clean text function (basic version)
def clean_text(text):
    if pd.isna(text):
        return ""
    return ''.join(e for e in str(text) if e.isalnum() or e.isspace()).lower()

# Preprocess NextGen justifications
next_cleaned = next_justifications.apply(clean_text).tolist()

# Result list
matches = []

# Loop through CurrentGen and find best match
for idx, current in enumerate(current_justifications):
    cleaned_current = clean_text(current)

    # Choose a snippet to match (e.g., first 8 words or 60 characters)
    snippet = ' '.join(cleaned_current.split()[:8])

    # Find best match in NextGen
    match, score, match_index = process.extractOne(
        snippet, next_cleaned, scorer=fuzz.partial_ratio
    )

    # Save the match info
    matches.append({
        'CurrentGen_Index': idx,
        'CurrentGen_Justification': current,
        'NextGen_Index': match_index,
        'NextGen_Justification': next_justifications.iloc[match_index],
        'Match_Score': score
    })

# Create a dataframe with the matches
matches_df = pd.DataFrame(matches)

# Optional: filter out low-confidence matches
filtered_matches = matches_df[matches_df['Match_Score'] > 70]  # adjust as needed

# Save to Excel
filtered_matches.to_excel('matched_alerts.xlsx', index=False)