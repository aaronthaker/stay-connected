def calculate_optimal_arbitrage(exchange_odds, exchange_liquidity, commission, bookmaker_odds):
    """
    Calculate the optimal bookmaker stake based on exchange lay odds and liquidity.
    
    :param exchange_odds: The lay odds available at the exchange.
    :param exchange_liquidity: The maximum amount that can be matched on the exchange.
    :param commission: The exchange commission percentage (e.g., 2% for Betfair -> input 2).
    :param bookmaker_odds: The odds available at the bookmaker for backing the bet.
    :return: Recommended bookmaker stake, lay stake, net profit, and risk analysis.
    """

    # Adjust for exchange commission
    commission_multiplier = (1 - (commission / 100))

    # Maximum lay stake we can place based on exchange liquidity
    max_lay_stake = exchange_liquidity

    # Calculate the bookmaker stake required to match this lay stake
    bookmaker_stake = (max_lay_stake * exchange_odds) / bookmaker_odds

    # Calculate the payout from the bookmaker bet
    bookmaker_payout = bookmaker_stake * bookmaker_odds

    # Calculate lay liability
    lay_liability = max_lay_stake * (exchange_odds - 1)

    # Calculate profit in both scenarios
    profit_if_win = bookmaker_payout - bookmaker_stake - lay_liability
    profit_if_lose = max_lay_stake * commission_multiplier - bookmaker_stake

    # Determine guaranteed profit
    guaranteed_profit = min(profit_if_win, profit_if_lose)

    # Print Results
    print("\n--- Arbitrage Betting Breakdown ---")
    print(f"âœ… Recommended Bookmaker Stake: ${bookmaker_stake:.2f} at {bookmaker_odds:.2f} odds")
    print(f"âœ… Exchange Lay Stake: ${max_lay_stake:.2f} at {exchange_odds:.2f} odds")
    print(f"ðŸ“‰ Lay Liability: ${lay_liability:.2f}")
    print(f"ðŸ’° Profit if Bet Wins: ${profit_if_win:.2f}")
    print(f"ðŸ’° Profit if Bet Loses: ${profit_if_lose:.2f}")

    if guaranteed_profit > 0:
        print(f"ðŸŽ¯ Guaranteed Arbitrage Profit: ${guaranteed_profit:.2f}")
    else:
        print("âš  No guaranteed profit available.")

# User Inputs
exchange_odds = float(input("Enter exchange lay odds: "))
exchange_liquidity = float(input("Enter available exchange liquidity ($): "))
commission = float(input("Enter exchange commission percentage (e.g., 2 for 2%): "))
bookmaker_odds = float(input("Enter bookmaker odds: "))

# Calculate optimal betting strategy
calculate_optimal_arbitrage(exchange_odds, exchange_liquidity, commission, bookmaker_odds)