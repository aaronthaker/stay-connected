from pathlib import Path
import requests
import pandas as pd


class BehavoxApi:
    def __init__(self, session=None):
        self.api_token = 'NQ0-4EQtah0S_XU_rIG56NrprWrsx00ct64_p2xjlv4'
        self.ssl_cert_path = Path('C:\\Users\\dstock\\Desktop\\comms\\api\\cert\\glencore.behavox-saas.crt')
        self.base_url = 'https://glencore.behavox-saas.com/dashboard'
        self.session = session if session else requests.Session()

    def call_api(self, endpoint, params=None, response_dict_key=None):
        url = self.base_url + endpoint
        headers = {"Authorization": "Bearer " + self.api_token}
        data = []
        cursor = None

        while True:
            if cursor:
                if params:
                    params['cursor'] = cursor
                else:
                    params = {'cursor': cursor}

            response = self.session.get(url, headers=headers, verify=self.ssl_cert_path, params=params)
            response.raise_for_status()

            response_content = response.json()

            if response_dict_key:
                data.extend(response_content[response_dict_key])
                cursor = response_content.get('pagination', {}).get('cursor')
            else:
                data.extend(response_content)
                break

            if not cursor:
                break

        return data

    def get_alerts(self, start_date, end_date, limit=3000, severity=None, person_group=None):
        params = {
            'start-date': start_date,
            'end-date': end_date,
            'limit': limit
        }
        if severity:
            params['Severity'] = severity
        if person_group:
            params['person-group'] = person_group

        endpoint = '/api/1/alerts'
        return pd.json_normalize(self.call_api(endpoint=endpoint, params=params, response_dict_key='alerts'))

    def get_alert_by_id(self, alert_id):
        endpoint = f'/api/1/alert?alertId={alert_id}'
        return pd.json_normalize(self.call_api(endpoint=endpoint))

    def get_communications(self, start_date, end_date, limit=3000, company_name=None, person_id=None):
        params = {
            'start-date': start_date,
            'end-date': end_date,
            'limit': limit
        }
        if company_name:
            params['company-name'] = company_name
        if person_id:
            params['person-id'] = person_id

        endpoint = '/api/3/communications/find'
        return pd.json_normalize(self.call_api(endpoint=endpoint, params=params, response_dict_key='communications'))

    def get_communication_by_id(self, communication_id):
        params = {'ids': communication_id}
        endpoint = '/api/3/communications'
        return pd.json_normalize(self.call_api(endpoint=endpoint, params=params))

    def get_persons(self, person_ids=None, person_group=None, limit=3000):
        params = {
            'limit': limit
        }
        if person_ids:
            params['person-ids'] = person_ids
        if person_group:
            params['person-group'] = person_group

        endpoint = '/api/1/persons'
        return pd.json_normalize(self.call_api(endpoint=endpoint, params=params, response_dict_key='persons'))

    def get_person_by_id(self, person_id):
        endpoint = f'/api/1/person?personId={person_id}'
        return pd.json_normalize(self.call_api(endpoint=endpoint))

    def get_activity_logs(self, start_date, end_date, limit=3000, module=None, user=None):
        params = {
            'start-date': start_date,
            'end-date': end_date,
            'limit': limit
        }
        if module:
            params['module'] = module
        if user:
            params['user'] = user

        endpoint = '/api/1/activity-logs'
        return pd.json_normalize(self.call_api(endpoint=endpoint, params=params, response_dict_key='actions'))


if __name__ == '__main__':
    api = BehavoxApi()

    start_date = "2024-05-20T00:00:00.000Z"
    end_date = "2024-05-20T03:59:59.999Z"

    # Example: Fetch communications by date range
    communications = api.get_communications(start_date, end_date)
    print(communications)

    # Example: Fetch alerts by date range
    alerts = api.get_alerts(start_date, end_date)
    print(alerts)

    # Example: Fetch a specific communication by ID
    communication = api.get_communication_by_id('123456789')
    print(communication)

    # Example: Fetch a person by ID
    person = api.get_person_by_id(123)
    print(person)

    # Example: Fetch activity logs by date range
    logs = api.get_activity_logs(start_date, end_date)
    print(logs)