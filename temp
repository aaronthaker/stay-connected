Sub GenerateReports()
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    Application.EnableEvents = False

    Dim wsRaw As Worksheet, wsPwC As Worksheet, wsPwC7Days As Worksheet, wsSample As Worksheet, wsParams As Worksheet
    Dim lastRow As Long, lastRowPwC As Long, lastRowPwC7Days As Long
    Dim closingDate As Date, samplePercent As Double
    Dim dict As Object
    Dim sampleSize As Integer
    Dim i As Integer, rowNum As Integer
    Dim rng As Range, cell As Range
    Dim rawClosingDate As String, formattedClosingDate As Date

    ' Set worksheets
    Set wsRaw = ThisWorkbook.Sheets("Raw Data")
    Set wsPwC = ThisWorkbook.Sheets("Closed by PwC")
    Set wsPwC7Days = ThisWorkbook.Sheets("Closed by PwC Last 7 Days")
    Set wsSample = ThisWorkbook.Sheets("Random Sample")
    Set wsParams = ThisWorkbook.Sheets("Params")

    ' Find last row in Raw Data
    lastRow = wsRaw.Cells(wsRaw.Rows.Count, 1).End(xlUp).Row
    If lastRow < 2 Then
        MsgBox "Raw Data is empty!", vbExclamation
        Exit Sub
    End If

    ' Clear previous data efficiently
    wsPwC.Cells.ClearContents
    wsPwC7Days.Cells.ClearContents
    wsSample.Cells.ClearContents

    ' Copy headers to new sheets
    wsRaw.Rows(1).Copy wsPwC.Rows(1)
    wsRaw.Rows(1).Copy wsPwC7Days.Rows(1)
    wsRaw.Rows(1).Copy wsSample.Rows(1)

    ' Get date from Params C3 and sample percentage from C4
    On Error Resume Next
    closingDate = wsParams.Range("C3").Value
    samplePercent = wsParams.Range("C4").Value
    On Error GoTo 0

    If closingDate = 0 Then
        MsgBox "Invalid date in Params!C3.", vbExclamation
        Exit Sub
    End If
    If samplePercent <= 0 Or samplePercent > 1 Then
        MsgBox "Invalid sample percentage in Params!C4. Use a value between 0 and 1.", vbExclamation
        Exit Sub
    End If

    ' Filter for "Closed by PwC"
    Dim outputRow As Integer
    outputRow = 2
    For i = 2 To lastRow
        If wsRaw.Cells(i, 9).Value = "Closed" And _
           (wsRaw.Cells(i, 10).Value = "Initial Analysis" Or wsRaw.Cells(i, 10).Value = "Enhanced Analysis") And _
           (InStr(1, wsRaw.Cells(i, 8).Value, "Joseph Goldstein", vbTextCompare) > 0 Or _
            InStr(1, wsRaw.Cells(i, 8).Value, "Sam Lodge", vbTextCompare) > 0) Then
           
            wsRaw.Rows(i).Copy wsPwC.Rows(outputRow)
            outputRow = outputRow + 1
        End If
    Next i
    lastRowPwC = wsPwC.Cells(wsPwC.Rows.Count, 1).End(xlUp).Row

    ' Filter for "Closed by PwC Last 7 Days"
    outputRow = 2
    For i = 2 To lastRowPwC
        If wsPwC.Cells(i, 15).Value <> "" Then
            ' Extract and format the Closing Date properly
            rawClosingDate = wsPwC.Cells(i, 15).Value
            rawClosingDate = Trim(Replace(rawClosingDate, " UTC", "")) ' Remove " UTC"
            
            On Error Resume Next
            formattedClosingDate = CDate(rawClosingDate) ' Convert to Date/Time
            On Error GoTo 0

            ' Ensure the date is within the last 7 days from Params!C3
            If formattedClosingDate >= closingDate - 7 And formattedClosingDate <= closingDate Then
                wsPwC.Rows(i).Copy wsPwC7Days.Rows(outputRow)
                outputRow = outputRow + 1
            End If
        End If
    Next i
    lastRowPwC7Days = wsPwC7Days.Cells(wsPwC7Days.Rows.Count, 1).End(xlUp).Row

    ' Random Sampling
    If lastRowPwC7Days > 1 Then
        sampleSize = Application.WorksheetFunction.RoundDown((lastRowPwC7Days - 1) * samplePercent, 0)
        Set dict = CreateObject("Scripting.Dictionary")

        Do While dict.Count < sampleSize
            rowNum = Application.WorksheetFunction.RandBetween(2, lastRowPwC7Days)
            If Not dict.exists(rowNum) Then
                dict.Add rowNum, Nothing
                wsPwC7Days.Rows(rowNum).Copy wsSample.Rows(dict.Count + 1)
            End If
        Loop
    Else
        MsgBox "No data available for sampling in 'Closed by PwC Last 7 Days'.", vbInformation
    End If

    ' Restore Excel settings
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Application.EnableEvents = True

    MsgBox "Report Generation Complete!", vbInformation
End Sub