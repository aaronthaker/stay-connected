def explain_arbitrage(exchange_odds, exchange_liquidity, commission, bookmaker_odds):
    """
    Explain the arbitrage calculation process, detailing why the profit differs due to commission
    and how to adjust for equal profit regardless of the outcome.
    
    :param exchange_odds: Lay odds on the betting exchange.
    :param exchange_liquidity: Maximum amount that can be matched on the exchange.
    :param commission: Exchange commission percentage (e.g., 2 for 2%).
    :param bookmaker_odds: Odds available at the bookmaker.
    """

    # Calculate commission multiplier
    commission_multiplier = (1 - (commission / 100))

    # Calculate the maximum lay stake based on liquidity
    max_lay_stake = exchange_liquidity

    # Initial bookmaker stake calculation
    bookmaker_stake = (max_lay_stake * exchange_odds) / bookmaker_odds

    # Calculate the payout from the bookmaker bet
    bookmaker_payout = bookmaker_stake * bookmaker_odds

    # Calculate the lay liability
    lay_liability = max_lay_stake * (exchange_odds - 1)

    # Calculate profit if bookmaker bet wins
    profit_if_win = bookmaker_payout - bookmaker_stake - lay_liability

    # Calculate profit if bookmaker bet loses (winning the lay bet)
    commission_fee = max_lay_stake * (1 - commission_multiplier)  # Fee amount deducted
    profit_if_lose = (max_lay_stake * commission_multiplier) - bookmaker_stake

    print("\n--- Step-by-Step Arbitrage Explanation ---")
    print(f"1Ô∏è‚É£ Bookmaker Stake: Calculated as (Lay Stake √ó Lay Odds) √∑ Bookmaker Odds")
    print(f"   = ({max_lay_stake:.2f} √ó {exchange_odds:.2f}) √∑ {bookmaker_odds:.2f} = ${bookmaker_stake:.2f}")
    
    print(f"\n2Ô∏è‚É£ If the bookmaker bet wins:")
    print(f"   - You receive ${bookmaker_payout:.2f} from the bookmaker.")
    print(f"   - You lose ${lay_liability:.2f} on the exchange.")
    print(f"   - Profit = ${bookmaker_payout:.2f} - ${bookmaker_stake:.2f} - ${lay_liability:.2f} = ${profit_if_win:.2f}")
    
    print(f"\n3Ô∏è‚É£ If the bookmaker bet loses:")
    print(f"   - You win ${max_lay_stake:.2f} on the exchange, but a {commission}% commission applies.")
    print(f"   - The commission fee is {commission}% of ${max_lay_stake:.2f}, which is ${commission_fee:.2f}.")
    print(f"   - After commission, your exchange win is ${profit_if_lose + bookmaker_stake:.2f}.")
    print(f"   - Profit = ${profit_if_lose + bookmaker_stake:.2f} - ${bookmaker_stake:.2f} = ${profit_if_lose:.2f}")
    
    if profit_if_win != profit_if_lose:
        print("\n‚ö† The profits are not equal due to the exchange commission! Adjusting bookmaker stake...\n")

        # Adjust bookmaker stake to equalize profit
        bookmaker_stake *= (1 / commission_multiplier)

        # Recalculate values with adjusted bookmaker stake
        bookmaker_payout = bookmaker_stake * bookmaker_odds
        lay_stake = bookmaker_payout / exchange_odds
        lay_liability = lay_stake * (exchange_odds - 1)

        # Recalculate profits
        profit_if_win = bookmaker_payout - bookmaker_stake - lay_liability
        profit_if_lose = lay_stake * commission_multiplier - bookmaker_stake

        print(f"‚úÖ Adjusted bookmaker stake: ${bookmaker_stake:.2f} to balance profits.")
        print(f"‚úÖ Now both profit scenarios are equal at ${profit_if_win:.2f}.")

    print("\nüéØ Final Results:")
    print(f"‚úÖ Adjusted Bookmaker Stake: ${bookmaker_stake:.2f} at {bookmaker_odds:.2f} odds")
    print(f"‚úÖ Exchange Lay Stake: ${max_lay_stake:.2f} at {exchange_odds:.2f} odds")
    print(f"üìâ Lay Liability: ${lay_liability:.2f}")
    print(f"üí∞ Guaranteed Profit: ${profit_if_win:.2f} (Same regardless of outcome)")

# User Inputs
exchange_odds = float(input("Enter exchange lay odds: "))
exchange_liquidity = float(input("Enter available exchange liquidity ($): "))
commission = float(input("Enter exchange commission percentage (e.g., 2 for 2%): "))
bookmaker_odds = float(input("Enter bookmaker odds: "))

# Run the arbitrage explanation
explain_arbitrage(exchange_odds, exchange_liquidity, commission, bookmaker_odds)