import json
import os
import pandas as pd
from datetime import datetime

# Folder containing your JSON files
DATA_FOLDER = "json_files"

def convert_timestamp(ms):
    if isinstance(ms, int):
        return datetime.utcfromtimestamp(ms / 1000).strftime('%Y-%m-%d %H:%M:%S')
    return None

def join_values(items, fields):
    """Joins multiple values in a list of dicts using specified subfields."""
    return ", ".join(
        " | ".join(str(item.get(f, "")) for f in fields)
        for item in items
    )

def extract_message_data(item):
    from_person = item.get("from", {}).get("person", {})
    from_contact = item.get("from", {}).get("contact", {})

    first_recipients = item.get("firstRecipients", [])
    recipient_data = join_values(first_recipients, ["label", "id", "me", "value"])

    case_data = join_values(item.get("caseIds", []), ["name", "id", "status"])
    alert_data = join_values(item.get("alertIds", []), ["name", "id", "status"])

    return {
        "Message ID": item.get("id"),
        "Type": item.get("type"),
        "Format": item.get("format"),
        "Subject": item.get("subject"),
        "Body": item.get("body"),
        "Date": convert_timestamp(item.get("date")),
        "Has Attachments": item.get("hasAttachments"),
        "Review Count": item.get("reviewCount"),
        "From ID": from_person.get("id"),
        "From Label": from_person.get("label"),
        "From Monitored Employee": from_person.get("me"),
        "From Contact": from_contact.get("value"),
        "From Contact Type": from_contact.get("typeId"),
        "Recipients": recipient_data,
        "Recipient Count": item.get("recipientCount"),
        "Cases": case_data,
        "Alerts": alert_data
    }

# Load and parse all JSON files
all_data = []

for file in sorted(os.listdir(DATA_FOLDER)):
    if file.endswith(".json"):
        with open(os.path.join(DATA_FOLDER, file), 'r', encoding='utf-8') as f:
            data = json.load(f)
            for item in data.get("items", []):
                all_data.append(extract_message_data(item))

# Create a DataFrame and export to Excel
df = pd.DataFrame(all_data)
df.to_excel("behavox_export.xlsx", index=False)
print(f"Exported {len(df)} messages to behavox_export.xlsx")